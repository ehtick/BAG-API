openapi: 3.0.0

# Server specificatie
servers:
  - description: LVBAG - ACCEPTATIE
    url: https://api.bag.acceptatie.kadaster.nl/lvbag/individuelebevragingen/v2
  - description: LVBAG - PRODUCTIE
    url: https://api.bag.kadaster.nl/lvbag/individuelebevragingen/v2

# API specificatie - algemeen
info:
  title: BAG API Individuele Bevragingen - van de LVBAG
  description: >-
    Dit is de [BAG API](https://zakelijk.kadaster.nl/-/bag-api) Individuele Bevragingen van de Landelijke Voorziening Basisregistratie Adressen en Gebouwen (LVBAG). 
    <br/>
    Meer informatie over de Basisregistratie Adressen en Gebouwen is te vinden op de website van het [Ministerie van Binnenlandse Zaken en Koninkrijksrelaties](https://www.geobasisregistraties.nl/basisregistraties/adressen-en-gebouwen) en [Kadaster](https://zakelijk.kadaster.nl/bag).
    <br/>
    <br/>
    De BAG API levert informatie conform de [BAG Catalogus 2018](https://www.geobasisregistraties.nl/documenten/publicatie/2018/03/12/catalogus-2018) en het informatiemodel IMBAG 2.0.
    De API specificatie volgt de [Nederlandse API-Strategie](https://docs.geostandaarden.nl/api/API-Strategie) specificatie versie van 20200204 en is opgesteld in [OpenAPI Specificatie](https://www.forumstandaardisatie.nl/standaard/openapi-specification) (OAS) v3. 
    <br/>
    Het standaard mediatype HAL (`application/hal+json`) wordt gebruikt. Dit is een mediatype voor het weergeven van resources en hun relaties via hyperlinks.
    <br/>
    <br/>
    Deze API is vooral gericht op individuele bevragingen (op basis van de identificerende gegevens van een object).
    Om gebruik te kunnen maken van de BAG API is een API key nodig, deze kan verkregen worden door het [aanvraagformulier](https://formulieren.kadaster.nl/aanvraag_bag_api_individuele_bevragingen_productie) in te vullen.
    <br/>
    <br/>
    Voor vragen, neem contact op met de LVBAG beheerder o.v.v. BAG API 2.0. We zijn aan het kijken naar een geschikt medium hiervoor, mede ook om de API iteratief te kunnen opstellen of doorontwikkelen samen met de community. Als de API iets (nog) niet kan, wat u wel graag wilt, neem dan contact op.

  # Gebruikte versienotatie: x.y.z voor major, minor en patch releases. 
  # De major versie komt overeen met de major versie in de api-info.yaml.
  version: '2.0.0'
  termsOfService: https://zakelijk.kadaster.nl/algemene-voorwaarden
  contact:
    name: Kadaster - Beheerder LVBAG
    url: https://zakelijk.kadaster.nl/bag
  license:
    name: European Union Public License, version 1.2 (EUPL-1.2)
    url: https://eupl.eu/1.2/nl/

security:
  - apiKeyBAG: []
  # Alle requests verwachten een (BAG) API key (niet per operation of end-point verschillend)
  # Voor definitie van benoemde 'apiKeyBAG', zie security-schemes onderin.

#+Functionele toelichting bij de operations/end-points als documentatie indeling.
tags:
  -
    name: Bronhouder
    description: 'Dit endpoint levert één of meer bronhouder(s).'

paths:

  # Vraag bronhouder
  /bronhouders/{identificatie}:
    get:
      security:
        - apiKeyBAG: []
      tags:
        - Bronhouder
      summary: 'Bevragen bronhouder met de bronhouder identificatie (gemeentecode).'
      operationId: bevragenBronhouder
      description: >-
        Bevragen/raadplegen van een bronhouder met de identificatie van een bronhouder (gemeentecode).
        Als geldigOp en/of beschikbaarOp niet wordt opgegeven, worden de actuele gegevens geleverd.
      parameters:
        - $ref: '#/components/parameters/identificatie'
        - $ref: '#/components/parameters/geldigOp'
        - $ref: '#/components/parameters/beschikbaarOp'

      # Antwoord bevragenBronhouder
      responses:
        '200':
          description: Bevraging bronhouder geslaagd
          headers:
            api-version: #Is dit wel API strategie?
              $ref: '../../../../generiek/headers.yaml#/api_version'
            warning:
              $ref: '../../../../generiek/headers.yaml#/warning'
          content:
            application/hal+json:
              schema:
                $ref: './resources.yaml#/BronhouderHal'
        '400':
          $ref: '../../../../generiek/responses.yaml#/400'
        '401':
          $ref: '../../../../generiek/responses.yaml#/401'
        '403':
          $ref: '../../../../generiek/responses.yaml#/403'
        '404':
          $ref: '../../../../generiek/responses.yaml#/404'
        '405':
          $ref: '../../../../generiek/responses.yaml#/405'
        '500':
          $ref: '../../../../generiek/responses.yaml#/500'
        '503':
          $ref: '../../../../generiek/responses.yaml#/503'
        default:
          $ref: '../../../../generiek/responses.yaml#/default'

  # Zoek bronhouder
  /bronhouders:
    get:
      security:
        - apiKeyBAG: []
      tags:
        - Bronhouder
      summary: 'Bevragen bronhouder met een object identificatie.'
      operationId: zoekBronhouder
      description: >-
        Bevragen/raadplegen van een bronhouder met de identificatie van een object.
        De identificatie van één van de objecten: woonplaats, openbare ruimte, nummeraanduiding, ligplaats, standplaats, verblijfsobject of pand dient gespecificeerd te worden:<br/>
        Als geldigOp en/of beschikbaarOp niet wordt opgegeven, worden de actuele gegevens geleverd.
      parameters:
        - $ref: '#/components/parameters/woonplaatsIdentificatie'
        - $ref: '#/components/parameters/objectIdentificatie'
        - $ref: '#/components/parameters/geldigOp'
        - $ref: '#/components/parameters/beschikbaarOp'

      # Antwoord zoekBronhouder
      responses:
        '200':
          description: Bevraging zoekBronhouder geslaagd
          headers:
            api-version:
              $ref: '../../../../generiek/headers.yaml#/api_version'
            warning:
              $ref: '../../../../generiek/headers.yaml#/warning'
          content:
            application/hal+json:
              schema:
                $ref: './resources.yaml#/BronhouderHalCollection'
        '400':
          $ref: '../../../../generiek/responses.yaml#/400'
        '401':
          $ref: '../../../../generiek/responses.yaml#/401'
        '403':
          $ref: '../../../../generiek/responses.yaml#/403'
        '405':
          $ref: '../../../../generiek/responses.yaml#/405'
        '406':
          $ref: '../../../../generiek/responses.yaml#/406'
        '500':
          $ref: '../../../../generiek/responses.yaml#/500'
        '503':
          $ref: '../../../../generiek/responses.yaml#/503'
        default:
          $ref: '../../../../generiek/responses.yaml#/default'

  /bronhouders/{identificatie}/{versie}/{timestampRegistratieLv}:
    get:
      security:
        - apiKeyBAG: []
      tags:
        - Bronhouder
      summary: bevragen voorkomen van een bronhouder met de identificatie van een bronhouder en de identificatie van een voorkomen, bestaande uit een versie en een timestamp van het tijdstip van registratie in de LV BAG.
      operationId: bronhouderIdentificatieVoorkomen 
      description: >-
        Bevragen/raadplegen van een voorkomen van een bronhouder met de identificatie van een bronhouder en de identificatie van een voorkomen, bestaande uit een versie en een timestamp van het tijdstip van registratie in de LV BAG.
      parameters:
        - $ref: '#/components/parameters/identificatie'
        - $ref: '#/components/parameters/versie'
        - $ref: '#/components/parameters/timestampRegistratieLv'

      # Antwoord bronhouderIdentificatieVoorkomen
      responses:
        '200':
          description: Bevraging bronhouderIdentificatieVoorkomen geslaagd
          headers:
            api-version:
              $ref: '../../../../generiek/headers.yaml#/api_version'
            warning:
              $ref: '../../../../generiek/headers.yaml#/warning'
          content:
            application/hal+json:
              schema:
                $ref: './resources.yaml#/BronhouderHal'
        '400':
          $ref: '../../../../generiek/responses.yaml#/400'
        '401':
          $ref: '../../../../generiek/responses.yaml#/401'
        '403':
          $ref: '../../../../generiek/responses.yaml#/403'
        '404':
          $ref: '../../../../generiek/responses.yaml#/404'
        '405':
          $ref: '../../../../generiek/responses.yaml#/405'
        '406':
          $ref: '../../../../generiek/responses.yaml#/406'
        '500':
          $ref: '../../../../generiek/responses.yaml#/500'
        '503':
          $ref: '../../../../generiek/responses.yaml#/503'
        default:
          $ref: '../../../../generiek/responses.yaml#/default'

components:

  securitySchemes:
    apiKeyBAG:
      type: apiKey
      name: X-Api-Key
      in: header
      description: >
        De API-key die je hebt gekregen dient bij elke request via de 
        `X-Api-Key` request header meegestuurd te worden. Indien deze 
        niet juist wordt meegestuurd, of het een ongeldige key betreft, 
        zul je de foutmelding `403 Forbidden` terugkrijgen.

  parameters:
    # Opsomming van path parameters - /{...} - specificatie bij operation zelf.
    identificatie:
      description: 'Een officiële code die aan een gemeente is toegekend, ontleend is aan tabel 33.'
      name: identificatie
      in: path
      required: true
      schema:
        type: string
        pattern: '^[0-9]{4}$'
        example: '0226'

    versie:
      description: 'De versie van een voorkomen van een object'
      name: versie
      in: path
      required: true
      schema:
        type: integer
        example: 1
        
    timestampRegistratieLv:
      description: 'Een timestamp van het tijdstip waarop een voorkomen is geregistreerd in de LV BAG'
      name: timestampRegistratieLv
      in: path
      required: true
      schema:
        type: string
        example: '1530403860000'

    # Opsomming van request parameters - ?='...' parameters (by name) - specificatie bij operation zelf.
    woonplaatsIdentificatie:
      description: Identificatie van een object uit de BAG. Deze is 4 lang bij een woonplaats en 16 lang bij de andere objecten.
      name: woonplaatsIdentificatie
      in: query
      required: false
      schema:
        description: 'Deze wordt gebruikt in de operation, bv. /woonplaatsen/3560. Waarde: 0001-9999, formaat: ^[0-9]{3}[1-9]\|[0-9]{2}[1-9][0-9]\|[0-9][1-9][0-9]{2}\|[1-9][0-9]{3}$.'
        type: string
        pattern: '[0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]|[0-9][1-9][0-9]{2}|[1-9][0-9]{3}'
        example: '2096'
      deprecated: true

    objectIdentificatie:
      description: Identificatie van een object uit de BAG. Deze is 4 lang bij een woonplaats en 16 lang bij de andere objecten.
      name: objectIdentificatie
      in: query
      required: false
      schema:
        type: string
        pattern: '^[0-9]{4}(?:01|02|03|10|20|30)[0-9]{10}$|^[0-9]{3}[1-9]$|^[0-9]{2}[1-9][0-9]$|^[0-9][1-9][0-9]{2}$|^[1-9][0-9]{3}$'
        example: '0226100000008856'

    geldigOp:
      description: >
        Filtert op objecten die geldig zijn op de opgegeven datum 'YYYY-MM-DD'
        Deze parameters komen uit de API strategie, het hoofdstuk [tijdreizen](https://docs.geostandaarden.nl/api/API-Strategie/#tijdreizen)
      name: geldigOp
      in: query
      required: false
      schema:
        type: string
        format: date
        example: '2019-06-01'

    beschikbaarOp:
      description: >
        Filtert op objecten die beschikbaar zijn op de opgegeven datum en tijd `YYYY-MM-DDThh:mm:ss.sss'
        Hierin kunnen de seconden ':ss' en milliseconden '.sss' of alleen de milliseconden conform ISO 8601 specificatie worden weggelaten, in dat geval krijgen deze automatisch de waarde ':00' respectievelijk '.000'.
        Indien er voor de milliseconden '.sss' meer dan 3 cijfers worden opgegeven, bv. '.12345', dan wordt dit afgekapt tot '.123'.
        Deze parameters komen uit de API strategie, het hoofdstuk [tijdreizen](https://docs.geostandaarden.nl/api/API-Strategie/#tijdreizen)
      name: beschikbaarOp
      in: query
      required: false
      schema:
        type: string
        format: date-time
        example: '2019-06-01T12:00:00.000'
